The IPCtest contains all the generators of different libraries and languages. 
In order to create an abstraction and a way to connect different languages, I have used named pipes.
Named pipes can be created on a Linux system with mkfifo. These are FIFO systems, when a program reads from it, it will find the first write first.
We create to pipes, which I have named emptyPipe and randomPipe. The emptyPipe gives the tester program "generator.c" the option to request more numbers.
The randomPipe is used to read a new number from, which are generated by a program of choice when they are requested.

I connect the pipes to the stdin and stdout of a program, since these are present datastreams in every programming language I want to test.
The bash command to start the generator would be:
program < emptyPipe > randomPipe


Compile tester c file:
gcc generator.c -o name -ltestu01 -lprobdist -lmylib -lgmp -lm

To start the tester, we would use the command below:
./name

So for example with testing generator.py, we would first do
$python3 generator.py < emptyPipe > randomPipe
$./generator
These processes need to be live simultaneously, so either use 1 terminal with an & or use two terminals.